name: Execução de Testes

on:
  workflow_call:

jobs:
  unit-test:
    name: Teste de Unidade
    runs-on: ubuntu-latest
    steps:
      - name: Obtendo o codigo do projeto
        uses: actions/checkout@v4
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.300"
      - name: Execucao do teste unitario
        working-directory: ./src
        run: dotnet test ./Review-Filmes.Test.Unit/Review-Filmes.Test.Unit.csproj

  integration-test:
    name: Teste de Integracao
    runs-on: ubuntu-latest
    services:
      postgre:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: review
          POSTGRES_PASSWORD: postgresspwd
          POSTGRES_DB: review-filmes
    steps:
      - name: Obtendo o codigo do projeto
        uses: actions/checkout@v4

      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.300"

      - name: Execucao do teste Integrado
        working-directory: ./src
        run: dotnet test ./Review-Filmes.Test.Integration/Review-Filmes.Test.Integration.csproj
        env:
          ConnectionStrings__DefaultConnection: "Host=localhost;Port=5432;Database=review-filmes;Username=review;Password=postgresspwd"

  sonarqube:
    name: Scan com o sonarqube
    runs-on: ubuntu-latest
    steps:
      - name: Obtendo o codigo do projeto
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: adopt
          java-version: '21'
        
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.300"

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~\.sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"filme" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
          dotnet build
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
